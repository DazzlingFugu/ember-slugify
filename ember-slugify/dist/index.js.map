{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import slugify from 'slugify'\nimport simplePinyin from 'simple-pinyin'\nimport emoji from 'emoji.json'\n\nconst UNWANTED_OPTIONS = [\n  'strict', // strip special characters except replacement (boolean)\n]\n\nfunction removeDiacritics(str = '') {\n  return str.normalize('NFKD').replace(/[\\u0300-\\u036F]/g, '')\n}\n\nfunction _parseLocale(locale) {\n  if (typeof locale !== 'string') {\n    return\n  }\n\n  if (locale.includes('-')) {\n    return locale.split('-')[0]\n  }\n\n  if (locale.includes('_')) {\n    return locale.split('_')[0]\n  }\n\n  return locale\n}\n\nexport default function slugifyFunction(str = '', options = {}) {\n  UNWANTED_OPTIONS.forEach((key) => {\n    if (options[key] !== undefined) {\n      delete options[key]\n    }\n  })\n  let locale = _parseLocale(options.locale)\n  let result = removeDiacritics(str)\n  if (options.pinyin) {\n    result = simplePinyin(result, {\n      matchFullText: 'original',\n    }).reduce((acc, b) => (b.length === 1 ? `${acc}${b}` : `${acc} ${b}`), '')\n  }\n  if (options.emoji) {\n    emoji.forEach((emoji) => {\n      result = result.replaceAll(emoji.char, ` ${emoji.name} `)\n    })\n  }\n  return slugify(\n    result,\n    Object.assign(\n      {\n        replacement: '-',\n        lower: true,\n        strict: true,\n        locale: undefined,\n        trim: true,\n        pinyin: false,\n        emoji: false,\n      },\n      options,\n      {\n        locale,\n      }\n    )\n  )\n}\n\nexport { removeDiacritics, slugifyFunction as slugify }\n"],"names":["UNWANTED_OPTIONS","removeDiacritics","str","normalize","replace","_parseLocale","locale","includes","split","slugifyFunction","options","forEach","key","undefined","result","pinyin","simplePinyin","matchFullText","reduce","acc","b","length","emoji","replaceAll","char","name","slugify","Object","assign","replacement","lower","strict","trim"],"mappings":";;;;AAIA,MAAMA,gBAAgB,GAAG,CACvB,QAAQ;AAAE,CACX,CAAA;;AAED,SAASC,gBAAgBA,CAACC,GAAG,GAAG,EAAE,EAAE;AAClC,EAAA,OAAOA,GAAG,CAACC,SAAS,CAAC,MAAM,CAAC,CAACC,OAAO,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAA;AAC9D,CAAA;AAEA,SAASC,YAAYA,CAACC,MAAM,EAAE;AAC5B,EAAA,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;AAC9B,IAAA,OAAA;AACF,GAAA;AAEA,EAAA,IAAIA,MAAM,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;IACxB,OAAOD,MAAM,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;AAC7B,GAAA;AAEA,EAAA,IAAIF,MAAM,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;IACxB,OAAOD,MAAM,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;AAC7B,GAAA;AAEA,EAAA,OAAOF,MAAM,CAAA;AACf,CAAA;AAEe,SAASG,eAAeA,CAACP,GAAG,GAAG,EAAE,EAAEQ,OAAO,GAAG,EAAE,EAAE;AAC9DV,EAAAA,gBAAgB,CAACW,OAAO,CAAEC,GAAG,IAAK;AAChC,IAAA,IAAIF,OAAO,CAACE,GAAG,CAAC,KAAKC,SAAS,EAAE;MAC9B,OAAOH,OAAO,CAACE,GAAG,CAAC,CAAA;AACrB,KAAA;AACF,GAAC,CAAC,CAAA;AACF,EAAA,IAAIN,MAAM,GAAGD,YAAY,CAACK,OAAO,CAACJ,MAAM,CAAC,CAAA;AACzC,EAAA,IAAIQ,MAAM,GAAGb,gBAAgB,CAACC,GAAG,CAAC,CAAA;EAClC,IAAIQ,OAAO,CAACK,MAAM,EAAE;AAClBD,IAAAA,MAAM,GAAGE,YAAY,CAACF,MAAM,EAAE;AAC5BG,MAAAA,aAAa,EAAE,UAAA;AACjB,KAAC,CAAC,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAMA,CAAC,CAACC,MAAM,KAAK,CAAC,GAAI,CAAA,EAAEF,GAAI,CAAA,EAAEC,CAAE,CAAA,CAAC,GAAI,CAAA,EAAED,GAAI,CAAA,CAAA,EAAGC,CAAE,CAAA,CAAE,EAAE,EAAE,CAAC,CAAA;AAC5E,GAAA;EACA,IAAIV,OAAO,CAACY,KAAK,EAAE;AACjBA,IAAAA,KAAK,CAACX,OAAO,CAAEW,KAAK,IAAK;AACvBR,MAAAA,MAAM,GAAGA,MAAM,CAACS,UAAU,CAACD,KAAK,CAACE,IAAI,EAAG,CAAGF,CAAAA,EAAAA,KAAK,CAACG,IAAK,GAAE,CAAC,CAAA;AAC3D,KAAC,CAAC,CAAA;AACJ,GAAA;AACA,EAAA,OAAOC,OAAO,CACZZ,MAAM,EACNa,MAAM,CAACC,MAAM,CACX;AACEC,IAAAA,WAAW,EAAE,GAAG;AAChBC,IAAAA,KAAK,EAAE,IAAI;AACXC,IAAAA,MAAM,EAAE,IAAI;AACZzB,IAAAA,MAAM,EAAEO,SAAS;AACjBmB,IAAAA,IAAI,EAAE,IAAI;AACVjB,IAAAA,MAAM,EAAE,KAAK;AACbO,IAAAA,KAAK,EAAE,KAAA;GACR,EACDZ,OAAO,EACP;AACEJ,IAAAA,MAAAA;AACF,GAAC,CACF,CACF,CAAA;AACH;;;;"}