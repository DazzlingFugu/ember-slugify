{"version":3,"file":"slugify.js","sources":["../../src/helpers/slugify.js"],"sourcesContent":["import { helper } from '@ember/component/helper'\nimport { slugify as slugifyFunction } from '../index'\n\nconst AVAILABLE_OPTIONS = [\n  'replacement', // replace spaces with replacement character (string)\n  'remove', // remove characters that match regex (regexp)\n  'lower', // convert to lower case (boolean)\n  'locale', //language code of the locale to use (string)\n  'trim', // trim leading and trailing replacement chars (boolean)\n  'pinyin', // replace chinese by latin character following the pinyin method (boolean)\n  'emoji', // replace unicode emoji by it's description (boolean)\n]\n\nfunction slugify(args) {\n  let [string, options] = args\n  let opts = {}\n  if (options) {\n    AVAILABLE_OPTIONS.forEach((key) => {\n      if (options[key] !== undefined) {\n        opts[key] = options[key]\n      }\n    })\n  }\n  return slugifyFunction(string, opts)\n}\n\nexport default helper(slugify)\n"],"names":["AVAILABLE_OPTIONS","slugify","args","string","options","opts","forEach","key","undefined","slugifyFunction","helper"],"mappings":";;;AAGA,MAAMA,iBAAiB,GAAG,CACxB,aAAa;AAAE;AACf,QAAQ;AAAE;AACV,OAAO;AAAE;AACT,QAAQ;AAAE;AACV,MAAM;AAAE;AACR,QAAQ;AAAE;AACV,OAAO;AAAE,CACV,CAAA;;AAED,SAASC,OAAOA,CAACC,IAAI,EAAE;AACrB,EAAA,IAAI,CAACC,MAAM,EAAEC,OAAO,CAAC,GAAGF,IAAI,CAAA;EAC5B,IAAIG,IAAI,GAAG,EAAE,CAAA;AACb,EAAA,IAAID,OAAO,EAAE;AACXJ,IAAAA,iBAAiB,CAACM,OAAO,CAAEC,GAAG,IAAK;AACjC,MAAA,IAAIH,OAAO,CAACG,GAAG,CAAC,KAAKC,SAAS,EAAE;AAC9BH,QAAAA,IAAI,CAACE,GAAG,CAAC,GAAGH,OAAO,CAACG,GAAG,CAAC,CAAA;AAC1B,OAAA;AACF,KAAC,CAAC,CAAA;AACJ,GAAA;AACA,EAAA,OAAOE,eAAe,CAACN,MAAM,EAAEE,IAAI,CAAC,CAAA;AACtC,CAAA;AAEA,gBAAeK,MAAM,CAACT,OAAO,CAAC;;;;"}